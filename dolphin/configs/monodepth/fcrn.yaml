engine:
    type: DepthEngine
algorithm:
    type: FCRN
    pretrained:
    pretrained_modules:
    backbone:
        type: ResNet
        depth: 50
        norm_eval: False
    decoder:
        type: FCRNUpProjection
        pad_mode: left
    head:
        type: FCRNHead
        upsample: True
        loss:
            type: MSELoss
train_cfg:
test_cfg:
    gt_dir: 
    pred_dir:
train_pipeline: &train_pipeline
    -
        type: Transpose
        keys: ['imgs', 'label']
        order: [[2, 1, 0], [1, 0]]
    -
        type: Resize
        key: imgs
        img_scale: [228, 228]
        keep_ratio: True
        rescale_edge: min
    -
        type: Resize
        key: label
        img_scale: [228, 228]
        keep_ratio: True
        rescale_edge: min
    -
        type: Transpose
        keys: ['imgs']
        order: [2, 0, 1]
    -
        type: Collect
        keys: ['imgs', 'label']
    -
        type: ToTensor
        keys: ['imgs', 'label']
test_pipeline: &test_pipeline
data:
    samples_per_gpu: 16
    workers_per_gpu: 0
    train:
        type: NyuDepthDataset
        ann_file: /userhome/data/mono_depth/nyu_depth_v2_labeled.mat
        pipeline: *train_pipeline
        data_list: /userhome/code/FCRN/trainIdxs.txt
        test_mode: False
    val:
        type: NyuDepthDataset
        ann_file: /userhome/data/mono_depth/nyu_depth_v2_labeled.mat
        pipeline: *train_pipeline
        data_list:
        test_mode: True
    test:
        type: NyuDepthDataset
        ann_file: /userhome/data/mono_depth/nyu_depth_v2_labeled.mat
        pipeline: *train_pipeline
        data_list: /userhome/code/FCRN/testIdxs.txt
        test_mode: True
runtime:
    log:
        config_path: ./configs/logger.yaml
        logger_name: pcl
        filename: pcl.log
        console_level: INFO
        file_level: DEBUG
    load_from:
        filename: /userhome/data/mono_depth/NYU_ResNet-UpProj.npy
        # filename: /userhome/code/pclcv_transit/pclcv/work_dir/fcrn/latest.pth
        map_location: cpu
        strict: False
    resume_from:
        filename:
        resume_optimizer: True
        map_location: default
    optimizer:
        type: Adam
        lr: 0.00001
    lr_config:
        policy: step
        step: [10, 20, 30, 40, 50]
        gamma: 0.6
    checkpoint_cfg:
        interval: 10
    total_epochs: 50
    vis_interval: 1
    work_dir: ./work_dir
    gpus: 1
    gpu_ids: [0]
    seed: 
    work_flow: [['test', 1]]